{% macro initial_cluster() -%}
{% for host in groups[etcd.peers_group] -%}
  {{ hostvars[host]['ansible_hostname'] }}={{ etcd.peer_url_scheme }}://{{ hostvars[host]['ansible_' + etcd.interface].ipv4.address }}:{{ etcd.peer_port }}
  {%- if not loop.last -%},{%- endif -%}
{%- endfor -%}
{% endmacro -%}
apiVersion: v1
kind: Pod
metadata:
  annotations:
    scheduler.alpha.kubernetes.io/critical-pod: ""
  labels:
    component: etcd
    tier: control-plane
  name: etcd
  namespace: kube-system
spec:
  containers:
  - command:
    - etcd
    - --advertise-client-urls={{ etcd_advertise_client_urls }}
    - --client-cert-auth=true
    - --cert-file={{ etcd.ssl_cert_file }}
    - --key-file={{ etcd.ssl_key_file }}
    - --trusted-ca-file={{ etcd.ssl_ca_file }}
    - --data-dir={{ etcd.data_dir }}
    - --initial-advertise-peer-urls={{ etcd_initial_advertise_peer_urls }}
    - --initial-cluster={{ initial_cluster() }}
    - --listen-client-urls={{ etcd_listen_client_urls }}
    - --listen-peer-urls={{ etcd_listen_peer_urls }}
{% if groups[etcd.peers_group] and groups[etcd.peers_group] | length > 0 %}
    - --name={{ ansible_hostname }}
{% else %}
    - --name=default
{% endif %}
    - --peer-client-cert-auth=true
    - --peer-cert-file={{ etcd.ssl_peer_cert_file }}
    - --peer-key-file={{ etcd.ssl_peer_key_file }}
    - --peer-trusted-ca-file={{ etcd.ssl_peer_ca_file }}
    - --snapshot-count=10000
    image: {{ etcd_image }}
    imagePullPolicy: IfNotPresent
    livenessProbe:
      exec:
        command:
        - /bin/sh
        - -ec
        - ETCDCTL_API=3 etcdctl --endpoints={{ etcd_advertise_client_urls }} --cacert={{ etcd.ssl_ca_file }}
          --cert={{ etcd.ssl_cert_file }} --key={{ etcd.ssl_key_file }}
          get foo
      failureThreshold: 8
      initialDelaySeconds: 15
      timeoutSeconds: 15
    name: etcd
    resources: {}
    volumeMounts:
    - mountPath: {{ kube.cert_dir }}
      name: etcd-certs
    - mountPath: {{ etcd.data_dir }}
      name: etcd-data
  hostNetwork: true
  priorityClassName: system-cluster-critical
  volumes:
  - hostPath:
      path: {{ kube.cert_dir }}
      type: DirectoryOrCreate
    name: etcd-certs
  - hostPath:
      path: {{ etcd.data_dir }}
      type: DirectoryOrCreate
    name: etcd-data
